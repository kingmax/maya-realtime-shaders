//lcReprojectPSBasic.cgh

//================================================
//     Full Shading
//================================================
float4 PSBasic (vert2pixel IN) : COLOR
{
  float3 V  = normalize(IN.eyeVec);
  float3 Nw = normalize(IN.worldNormal);
  float3 Bw = normalize(IN.worldBinormal);
  float3 Tw = normalize(IN.worldTangent);
  float3 Tc = mul(float4(IN.worldTangent,1),  ViewInverse).xyz; //transform to View/Camera
  float3 Bc = mul(float4(IN.worldBinormal,1), ViewInverse).xyz; //transform to View/Camera
  float3 Nc = mul(float4(IN.worldNormal,1),   ViewInverse).xyz; //transform to View/Camera
  float2 UV = IN.UV.xy;
  float3 N  = Nw;	
  float3 Nsphere = normalize(Nc);
	
	if (useNormalTexture)
  {
  	N = normalsTangent(tex2D(normalTextureSampler, UV),
                           	 normalize(Nw),
                             normalize(Bw),
                             normalize(Tw),
                             invertNormalGreen,
                             normalsScale);
 	Nsphere = normalsTangent(tex2D(normalTextureSampler, UV),
                           	 normalize(Nc),
                             normalize(Bc),
                             normalize(Tc),
                             invertNormalGreen,
                             normalsScale);
  }
  
  float3 Color = lerp(float3(0.5,0.5,0.5), float3(0.5,0.4,0.45), fresnelBasic(N, V, 2.0));
  float3 R = reflect(-V,N); 
	float  Alpha = 1.0;
	float iX = 1;
  float iY = 1;
  if (litSphereFlipX) iX = -1;
  if (litSphereFlipY) iY = -1;
  

  

  //Initialize textures
  float4 Ct = tex2D(colorTextureSampler, UV);
  float3 envCube = pow(abs(texCUBE(envCubeTextureSampler, rotateVectorAboutY(envRotation, R)).rgb), envPower)*envMultiplier;
  float3 litSphere = tex2D(litSphereTextureSampler, float2(0.49*iX,-0.49*iY*FIXCOORD) * Nsphere.xy + 0.5).rgb;
  float3 normals = 0.5+tangentVector(N, Nw, Tw, Bw)*0.5;
  
  
  if(outputColorTexture) Color = Ct.rgb;
  if(outputNormalsTexture) Color = normals;
  if(outputEnvCubeTexture) Color = envCube;
  if(outputLitSphereTexture) Color = litSphere;
  
  return float4(Color, 1.0 );
}